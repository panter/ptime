= form_for @entry, :html => { :class => 'grid_12'} do |f|
  - unless @entry.errors.empty?
    %ul#flash_alert
      - @entry.errors.full_messages.each do |msg|
        %li= msg

  %fieldset
    %legend Entry

    -# Show input field for :day(%input#entry_day_input) as hidden text field.
    -# This field is populated via jQuery and a datepicker.
    #entry-ui-datepicker

    -# Prefetch all tasks for projects. Store them in this hidden input field
    -# as JSON. When the user selects a project, the related tasks can be
    -# shown very quickly, then.
    %input#tasks_collection_storage{ :value => get_tasks_by_projects }

    %input#entry_day_input{ :name => "entry[day]",
      :value => @entry.day.strftime("%m/%d/%Y") }

    .entry_container
      .entry_group
        .entry_item
          = f.label :project_id
          = f.select :project_id, to_form_select(@active_projects), :include_blank => true
        .entry_item
          = f.label :task_id
          = f.select :task_id, tasks_collection, :include_blank => true

      .entry_group
        .entry_item
          = f.label :description
          = f.text_field :description

      .entry_group
        .entry_item
          %br
          = radio_button_tag 'time_capture_method', 'start_end',
            time_capture_method_state(@time_capture_method)
        #project_start.entry_item
          = f.label :start
          = f.text_field :start, :class => 'ui-timepicker',
            :value => localized_time(f, :start)
        #project_end.entry_item
          = f.label :end
          = f.text_field :end, :class => 'ui-timepicker',
            :value => localized_time(f, :end)

        .entry_item
          %br
          = radio_button_tag 'time_capture_method', 'duration',
            !time_capture_method_state(@time_capture_method)
        #project_duration.entry_item
          = f.label :duration
          = f.text_field :duration_hours, :value => @duration_hours
        .entry_item
          = f.label :billable
          = f.check_box :billable

      .entry_group
        .entry_item= f.submit 'Create Entry', :class => 'main_link'

= render 'entries'
