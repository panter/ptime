%h2.grid_12 Projects

= form_for @search, :url => projects_path, :html => {:method => :get, :class => 'grid_12 filter'} do |f|
  .grid_2
    = f.check_box :inactive_is_false
    = f.label :inactive_is_false, 'active'
  .grid_2.alpha
    = f.check_box :inactive_is_true
    = f.label :inactive_is_true, 'inactive'
  .grid_2
    = f.check_box :external_is_true
    = f.label :external_is_true, 'external'
  .grid_2
    = f.check_box :external_is_false
    = f.label :external_is_false, 'internal'
  .grid_2
    = f.select :project_state_id_equals,
      @project_states.collect {|p| [p.name, p.id]}, :include_blank => true
    = f.label :project_state_id_equals, 'state'
  .grid_2.omega= f.submit 'filter'

.box.grid_12
  %h2=link_to 'Project Overview', '#', :class => "toggle-box"
  %div
    %table.projects
      %thead
        %tr
          %th= sort_link @search, :shortname, 'Name'
          %th= sort_link @search, :description, 'Project desc.'
          %th= sort_link @search, :probability
          %th= sort_link @search, :start
          %th= sort_link @search, :end
          %th= sort_link @search, :project_state_name, 'Project state'
          %th= msort_link :profitability, "Exp. Profitability"
          // %th{:title => "where('valuta <= ?', Time.now).where(:payed => false, :sent => true, :positive => true).sum :amount"}= sort_link @search, :overdue_amount,  'Overdue amount'
          %th{ :title => "accountings.sum(:amount) + (rpl)*wage - (entries.sum(:duration) / 60.0 * wage) " }= msort_link :return, "Return"
          %th= msort_link :volume, 'Revenue'
          %th= msort_link :leader, 'PL'
          %th= sort_link @search, :inactive, 'Active'
          %th= sort_link @search, :external, 'External'

      - @projects.each do |project|
        %tr
          %td= link_to project.shortname, edit_project_path(project)
          %td= truncate(project.description, :length => 60)
          %td= format_percentage(project.probability)
          %td= l project.start
          %td= l project.end
          %td= get_project_state(project)
          %td= "%05.2f" % project.current_expected_profitability + " %"
          // %td= number_to_currency(project.overdue_amount, :delimiter => '`', :unit => "")
          %td= number_to_currency(project.current_expected_return, :delimiter => '`', :unit => "")
          %td= number_to_currency(project.volume, :delimiter => '`', :unit => "")
          %td= project.leader_name
          %td= bool_to_img(!project.inactive)
          %td= bool_to_img(project.external)
